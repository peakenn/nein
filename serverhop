local placeId = 15502339080

local function getBestServer()
    local sfUrl = "https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=%s&limit=%s&excludeFullGames=true"
    local req = request({ Url = string.format(sfUrl, placeId, "Asc", 100) })
    local body = game:GetService("HttpService"):JSONDecode(req.Body)
    local deep = math.random(1, 3)
    
    if deep > 1 then
        for i = 1, deep, 1 do
            req = request({ Url = string.format(sfUrl .. "&cursor=" .. body.nextPageCursor, placeId, "Asc", 100) })
            body = game:GetService("HttpService"):JSONDecode(req.Body)
            task.wait(0.1)
        end
    end
    
    local servers = {}
    if body and body.data then
        for i, v in next, body.data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                table.insert(servers, v)
            end
        end
    end
    
    table.sort(servers, function(a, b)
        return a.ping < b.ping
    end)
    
    return servers[1]
end

while wait(1) do
    local bestServer = getBestServer()
    
    if bestServer then
        game:GetService("TeleportService"):TeleportToPlaceInstance(placeId, bestServer.id, game:GetService("Players").LocalPlayer)
    else
        print("No suitable server found.")
    end
end
